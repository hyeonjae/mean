angular.module("myapp",["ngRoute"]),angular.module("myapp").controller("ApplicationCtrl",["$scope",function(t){t.$on("login",function(o,n){t.currentUser=n}),t.$on("logout",function(o){t.currentUser=null})}]),angular.module("myapp").controller("LoginCtrl",["$scope","UserSvc","$location",function(t,o,n){t.login=function(e,r){o.login(e,r).then(function(o){t.$emit("login",o.data),n.path("/")})}}]),angular.module("myapp").controller("LogoutCtrl",["$scope","UserSvc","$location",function(t,o,n){o.token=null,t.$emit("logout"),n.path("/")}]),angular.module("myapp").controller("PostsCtrl",["$scope","PostsSvc","UserSvc","$location",function(t,o,n,e){n.token?o.fetch().success(function(o){t.posts=o}).error(function(t){e.path("/login")}):e.path("/login"),t.addPost=function(){var e=t.postBody;_.trim(e).length>0&&o.create({token:n.token,body:t.postBody}).success(function(o){t.posts.unshift(o),t.postBody=""})}}]),angular.module("myapp").service("PostsSvc",["$http","UserSvc",function(t,o){this.fetch=function(){return t.get("/api/posts",{headers:{"X-Auth":o.token}})},this.create=function(o){return t.post("/api/posts",o)}}]),angular.module("myapp").config(["$routeProvider",function(t){t.when("/",{controller:"PostsCtrl",templateUrl:"posts.html"}).when("/register",{controller:"RegisterCtrl",templateUrl:"register.html"}).when("/login",{controller:"LoginCtrl",templateUrl:"login.html"}).when("/logout",{controller:"LogoutCtrl",templateUrl:"login.html"})}]),angular.module("myapp").service("UserSvc",["$http",function(t){var o=this;o.getUser=function(){return t.get("/api/users",{headers:{"X-Auth":this.token}})},o.login=function(n,e){return t.post("/api/sessions",{username:n,password:e}).then(function(t){return o.token=t.data,o.getUser()})}}]);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyJdLCJuYW1lcyI6WyJhbmd1bGFyIiwibW9kdWxlIiwiY29udHJvbGxlciIsIiRzY29wZSIsIiRvbiIsIl8iLCJ1c2VyIiwiY3VycmVudFVzZXIiLCJVc2VyU3ZjIiwiJGxvY2F0aW9uIiwibG9naW4iLCJ1c2VybmFtZSIsInBhc3N3b3JkIiwidGhlbiIsIiRlbWl0IiwiZGF0YSIsInBhdGgiLCJ0b2tlbiIsIlBvc3RzU3ZjIiwiZmV0Y2giLCJzdWNjZXNzIiwicG9zdHMiLCJlcnJvciIsImVyciIsImFkZFBvc3QiLCJwb3N0Qm9keSIsInRyaW0iLCJsZW5ndGgiLCJjcmVhdGUiLCJib2R5IiwicG9zdCIsInVuc2hpZnQiLCJzZXJ2aWNlIiwiJGh0dHAiLCJ0aGlzIiwiZ2V0IiwiaGVhZGVycyIsIlgtQXV0aCIsImNvbmZpZyIsIiRyb3V0ZVByb3ZpZGVyIiwid2hlbiIsInRlbXBsYXRlVXJsIiwic3ZjIiwiZ2V0VXNlciIsInZhbCJdLCJtYXBwaW5ncyI6IkFBQUFBLFFBQVFDLE9BQU8sU0FDZCxZQUlERCxRQUFRQyxPQUFPLFNBQ2RDLFdBQVcsbUJBQUEsU0FBbUIsU0FBU0MsR0FDdkNBLEVBQU9DLElBQUksUUFBUyxTQUFTQyxFQUFHQyxHQUMvQkgsRUFBT0ksWUFBY0QsSUFFdEJILEVBQU9DLElBQUksU0FBVSxTQUFTQyxHQUM3QkYsRUFBT0ksWUFBYyxVQUl2QlAsUUFBUUMsT0FBTyxTQUNkQyxXQUFXLGFBQWMsU0FBVSxVQUFXLFlBQWEsU0FBU0MsRUFBUUssRUFBU0MsR0FFbEZOLEVBQU9PLE1BQVEsU0FBU0MsRUFBVUMsR0FDOUJKLEVBQVFFLE1BQU1DLEVBQVVDLEdBQ25CQyxLQUFLLFNBQVNQLEdBQ1hILEVBQU9XLE1BQU0sUUFBU1IsRUFBS1MsTUFDM0JOLEVBQVVPLEtBQUssV0FLL0JoQixRQUFRQyxPQUFPLFNBQ2RDLFdBQVcsY0FBZSxTQUFVLFVBQVcsWUFBYSxTQUFTQyxFQUFRSyxFQUFTQyxHQUN0RkQsRUFBUVMsTUFBUSxLQUNoQmQsRUFBT1csTUFBTSxVQUNiTCxFQUFVTyxLQUFLLFFBR2hCaEIsUUFBUUMsT0FBTyxTQUNkQyxXQUFXLGFBQWMsU0FBVSxXQUFZLFVBQVcsWUFBYSxTQUFTQyxFQUFRZSxFQUFVVixFQUFTQyxHQUVuR0QsRUFBUVMsTUFHVEMsRUFBU0MsUUFBUUMsUUFBUSxTQUFTQyxHQUM5QmxCLEVBQU9rQixNQUFRQSxJQUNoQkMsTUFBTSxTQUFTQyxHQUNkZCxFQUFVTyxLQUFLLFlBTG5CUCxFQUFVTyxLQUFLLFVBU25CYixFQUFPcUIsUUFBVSxXQUNiLEdBQUlDLEdBQVd0QixFQUFPc0IsUUFDbEJwQixHQUFFcUIsS0FBS0QsR0FBVUUsT0FBUyxHQUUxQlQsRUFBU1UsUUFDTFgsTUFBT1QsRUFBUVMsTUFDZlksS0FBTTFCLEVBQU9zQixXQUVoQkwsUUFBUSxTQUFTVSxHQUNkM0IsRUFBT2tCLE1BQU1VLFFBQVFELEdBQ3JCM0IsRUFBT3NCLFNBQVcsU0FPbEN6QixRQUFRQyxPQUFPLFNBQ2QrQixRQUFRLFlBQWEsUUFBUyxVQUFXLFNBQVNDLEVBQU96QixHQUN0RDBCLEtBQUtmLE1BQVEsV0FDVCxNQUFPYyxHQUFNRSxJQUFJLGNBQ3RCQyxTQUFXQyxTQUFVN0IsRUFBUVMsVUFJL0JpQixLQUFLTixPQUFTLFNBQVVFLEdBQ2pCLE1BQU9HLEdBQU1ILEtBQUssYUFBY0EsT0FLeEM5QixRQUFRQyxPQUFPLFNBQ2RxQyxRQUFBLGlCQUFPLFNBQVNDLEdBQ2hCQSxFQUNFQyxLQUFLLEtBQU10QyxXQUFZLFlBQWF1QyxZQUFhLGVBQ2pERCxLQUFLLGFBQWN0QyxXQUFZLGVBQWdCdUMsWUFBYSxrQkFDNURELEtBQUssVUFBV3RDLFdBQVksWUFBYXVDLFlBQWEsZUFDdERELEtBQUssV0FBWXRDLFdBQVksYUFBY3VDLFlBQWEsa0JBRTNEekMsUUFBUUMsT0FBTyxTQUNkK0IsUUFBUSxXQUFBLFFBQVcsU0FBU0MsR0FDNUIsR0FBSVMsR0FBTVIsSUFDVlEsR0FBSUMsUUFBVSxXQUNiLE1BQU9WLEdBQU1FLElBQUksY0FDaEJDLFNBQVdDLFNBQVVILEtBQUtqQixVQUk1QnlCLEVBQUloQyxNQUFRLFNBQVNDLEVBQVVDLEdBQzlCLE1BQU9xQixHQUFNSCxLQUFLLGlCQUNqQm5CLFNBQVVBLEVBQ1ZDLFNBQVVBLElBQ1JDLEtBQUssU0FBUytCLEdBRWhCLE1BREFGLEdBQUl6QixNQUFRMkIsRUFBSTdCLEtBQ1QyQixFQUFJQyIsImZpbGUiOiJhcHAuanMiLCJzb3VyY2VzQ29udGVudCI6WyJhbmd1bGFyLm1vZHVsZSgnbXlhcHAnLCBbXG5cdCduZ1JvdXRlJ1xuXSk7XG5cblxuYW5ndWxhci5tb2R1bGUoJ215YXBwJylcbi5jb250cm9sbGVyKCdBcHBsaWNhdGlvbkN0cmwnLCBmdW5jdGlvbigkc2NvcGUpIHtcblx0JHNjb3BlLiRvbignbG9naW4nLCBmdW5jdGlvbihfLCB1c2VyKSB7XG5cdFx0JHNjb3BlLmN1cnJlbnRVc2VyID0gdXNlcjtcblx0fSk7XG5cdCRzY29wZS4kb24oJ2xvZ291dCcsIGZ1bmN0aW9uKF8pIHtcblx0XHQkc2NvcGUuY3VycmVudFVzZXIgPSBudWxsO1xuXHR9KTtcbn0pO1xuXG5hbmd1bGFyLm1vZHVsZSgnbXlhcHAnKVxuLmNvbnRyb2xsZXIoJ0xvZ2luQ3RybCcsIFsnJHNjb3BlJywgJ1VzZXJTdmMnLCAnJGxvY2F0aW9uJywgZnVuY3Rpb24oJHNjb3BlLCBVc2VyU3ZjLCAkbG9jYXRpb24pIHtcbiAgICBcbiAgICAkc2NvcGUubG9naW4gPSBmdW5jdGlvbih1c2VybmFtZSwgcGFzc3dvcmQpIHtcbiAgICAgICAgVXNlclN2Yy5sb2dpbih1c2VybmFtZSwgcGFzc3dvcmQpXG4gICAgICAgICAgICAudGhlbihmdW5jdGlvbih1c2VyKSB7XG4gICAgICAgICAgICAgICAgJHNjb3BlLiRlbWl0KCdsb2dpbicsIHVzZXIuZGF0YSk7XG4gICAgICAgICAgICAgICAgJGxvY2F0aW9uLnBhdGgoJy8nKTtcbiAgICAgICAgICAgIH0pO1xuICAgIH1cbn1dKTtcblxuYW5ndWxhci5tb2R1bGUoJ215YXBwJylcbi5jb250cm9sbGVyKCdMb2dvdXRDdHJsJywgWyckc2NvcGUnLCAnVXNlclN2YycsICckbG9jYXRpb24nLCBmdW5jdGlvbigkc2NvcGUsIFVzZXJTdmMsICRsb2NhdGlvbikge1xuXHRVc2VyU3ZjLnRva2VuID0gbnVsbDtcblx0JHNjb3BlLiRlbWl0KCdsb2dvdXQnKTtcblx0JGxvY2F0aW9uLnBhdGgoJy8nKTtcbn1dKTtcblxuYW5ndWxhci5tb2R1bGUoJ215YXBwJylcbi5jb250cm9sbGVyKCdQb3N0c0N0cmwnLCBbJyRzY29wZScsICdQb3N0c1N2YycsICdVc2VyU3ZjJywgJyRsb2NhdGlvbicsIGZ1bmN0aW9uKCRzY29wZSwgUG9zdHNTdmMsIFVzZXJTdmMsICRsb2NhdGlvbikge1xuICAgIFxuICAgIGlmICghVXNlclN2Yy50b2tlbikge1xuICAgICAgICAkbG9jYXRpb24ucGF0aCgnL2xvZ2luJyk7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgUG9zdHNTdmMuZmV0Y2goKS5zdWNjZXNzKGZ1bmN0aW9uKHBvc3RzKSB7XG4gICAgICAgICAgICAkc2NvcGUucG9zdHMgPSBwb3N0cztcbiAgICAgICAgfSkuZXJyb3IoZnVuY3Rpb24oZXJyKSB7XG4gICAgICAgICAgICAkbG9jYXRpb24ucGF0aCgnL2xvZ2luJyk7XG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgICRzY29wZS5hZGRQb3N0ID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgcG9zdEJvZHkgPSAkc2NvcGUucG9zdEJvZHk7XG4gICAgICAgIGlmIChfLnRyaW0ocG9zdEJvZHkpLmxlbmd0aCA+IDApIHtcblxuICAgICAgICAgICAgUG9zdHNTdmMuY3JlYXRlKHtcbiAgICAgICAgICAgICAgICB0b2tlbjogVXNlclN2Yy50b2tlbixcbiAgICAgICAgICAgICAgICBib2R5OiAkc2NvcGUucG9zdEJvZHlcbiAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAuc3VjY2VzcyhmdW5jdGlvbihwb3N0KSB7XG4gICAgICAgICAgICAgICAgJHNjb3BlLnBvc3RzLnVuc2hpZnQocG9zdCk7XG4gICAgICAgICAgICAgICAgJHNjb3BlLnBvc3RCb2R5ID0gJyc7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgIH07XG59XSk7XG5cblxuYW5ndWxhci5tb2R1bGUoJ215YXBwJylcbi5zZXJ2aWNlKCdQb3N0c1N2YycsIFsnJGh0dHAnLCAnVXNlclN2YycsIGZ1bmN0aW9uKCRodHRwLCBVc2VyU3ZjKSB7XG4gICAgdGhpcy5mZXRjaCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuICRodHRwLmdldCgnL2FwaS9wb3N0cycsIHtcblx0XHRcdGhlYWRlcnM6IHsgJ1gtQXV0aCc6IFVzZXJTdmMudG9rZW4gfVxuICAgICAgICB9KTtcbiAgICB9XG5cblx0dGhpcy5jcmVhdGUgPSBmdW5jdGlvbiAocG9zdCkge1xuICAgICAgICByZXR1cm4gJGh0dHAucG9zdCgnL2FwaS9wb3N0cycsIHBvc3QpO1xuICAgIH1cbn1dKTtcblxuXG5hbmd1bGFyLm1vZHVsZSgnbXlhcHAnKVxuLmNvbmZpZyhmdW5jdGlvbigkcm91dGVQcm92aWRlcikge1xuXHQkcm91dGVQcm92aWRlclxuXHRcdC53aGVuKCcvJywge2NvbnRyb2xsZXI6ICdQb3N0c0N0cmwnLCB0ZW1wbGF0ZVVybDogJ3Bvc3RzLmh0bWwnfSlcblx0XHQud2hlbignL3JlZ2lzdGVyJywge2NvbnRyb2xsZXI6ICdSZWdpc3RlckN0cmwnLCB0ZW1wbGF0ZVVybDogJ3JlZ2lzdGVyLmh0bWwnfSlcblx0XHQud2hlbignL2xvZ2luJywge2NvbnRyb2xsZXI6ICdMb2dpbkN0cmwnLCB0ZW1wbGF0ZVVybDogJ2xvZ2luLmh0bWwnfSlcblx0XHQud2hlbignL2xvZ291dCcsIHtjb250cm9sbGVyOiAnTG9nb3V0Q3RybCcsIHRlbXBsYXRlVXJsOiAnbG9naW4uaHRtbCd9KTtcbn0pO1xuYW5ndWxhci5tb2R1bGUoJ215YXBwJylcbi5zZXJ2aWNlKCdVc2VyU3ZjJywgZnVuY3Rpb24oJGh0dHApIHtcblx0dmFyIHN2YyA9IHRoaXM7XG5cdHN2Yy5nZXRVc2VyID0gZnVuY3Rpb24gKCkge1xuXHRcdHJldHVybiAkaHR0cC5nZXQoJy9hcGkvdXNlcnMnLCB7XG5cdFx0XHRoZWFkZXJzOiB7ICdYLUF1dGgnOiB0aGlzLnRva2VuIH1cblx0XHR9KTtcblx0fTtcblxuXHRzdmMubG9naW4gPSBmdW5jdGlvbih1c2VybmFtZSwgcGFzc3dvcmQpIHtcblx0XHRyZXR1cm4gJGh0dHAucG9zdCgnL2FwaS9zZXNzaW9ucycsIHtcblx0XHRcdHVzZXJuYW1lOiB1c2VybmFtZSwgXG5cdFx0XHRwYXNzd29yZDogcGFzc3dvcmRcblx0XHR9KS50aGVuKGZ1bmN0aW9uKHZhbCkge1xuXHRcdFx0c3ZjLnRva2VuID0gdmFsLmRhdGE7XG5cdFx0XHRyZXR1cm4gc3ZjLmdldFVzZXIoKTtcblx0XHR9KTtcblx0fTtcbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9