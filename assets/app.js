angular.module("myapp",["ngRoute"]),angular.module("myapp").controller("ApplicationCtrl",["$scope",function(t){t.$on("login",function(e,n){t.currentUser=n})}]),angular.module("myapp").controller("LoginCtrl",["$scope","UserSvc",function(t,e){t.login=function(n,o){e.login(n,o).then(function(e){t.$emit("login",e.data)})}}]),angular.module("myapp").controller("PostsCtrl",["$scope","PostsSvc","UserSvc",function(t,e,n){e.fetch().success(function(e){t.posts=e}),t.addPost=function(){var o=t.postBody;_.trim(o).length>0&&e.create({token:n.token,body:t.postBody}).success(function(e){t.posts.unshift(e),t.postBody=""})}}]),angular.module("myapp").service("PostsSvc",["$http","UserSvc",function(t,e){this.fetch=function(){return t.get("/api/posts",{headers:{"X-Auth":e.token}})},this.create=function(e){return t.post("/api/posts",e)}}]),angular.module("myapp").config(["$routeProvider",function(t){t.when("/",{controller:"PostsCtrl",templateUrl:"posts.html"}).when("/register",{controller:"RegisterCtrl",templateUrl:"register.html"}).when("/login",{controller:"LoginCtrl",templateUrl:"login.html"})}]),angular.module("myapp").service("UserSvc",["$http",function(t){var e=this;e.getUser=function(){return t.get("/api/users",{headers:{"X-Auth":this.token}})},e.login=function(n,o){return t.post("/api/sessions",{username:n,password:o}).then(function(t){return e.token=t.data,e.getUser()})}}]);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyJdLCJuYW1lcyI6WyJhbmd1bGFyIiwibW9kdWxlIiwiY29udHJvbGxlciIsIiRzY29wZSIsIiRvbiIsIl8iLCJ1c2VyIiwiY3VycmVudFVzZXIiLCJVc2VyU3ZjIiwibG9naW4iLCJ1c2VybmFtZSIsInBhc3N3b3JkIiwidGhlbiIsIiRlbWl0IiwiZGF0YSIsIlBvc3RzU3ZjIiwiZmV0Y2giLCJzdWNjZXNzIiwicG9zdHMiLCJhZGRQb3N0IiwicG9zdEJvZHkiLCJ0cmltIiwibGVuZ3RoIiwiY3JlYXRlIiwidG9rZW4iLCJib2R5IiwicG9zdCIsInVuc2hpZnQiLCJzZXJ2aWNlIiwiJGh0dHAiLCJ0aGlzIiwiZ2V0IiwiaGVhZGVycyIsIlgtQXV0aCIsImNvbmZpZyIsIiRyb3V0ZVByb3ZpZGVyIiwid2hlbiIsInRlbXBsYXRlVXJsIiwic3ZjIiwiZ2V0VXNlciIsInZhbCJdLCJtYXBwaW5ncyI6IkFBQUFBLFFBQVFDLE9BQU8sU0FDZCxZQUlERCxRQUFRQyxPQUFPLFNBQ2RDLFdBQVcsbUJBQUEsU0FBbUIsU0FBU0MsR0FDdkNBLEVBQU9DLElBQUksUUFBUyxTQUFTQyxFQUFHQyxHQUMvQkgsRUFBT0ksWUFBY0QsT0FJdkJOLFFBQVFDLE9BQU8sU0FDZEMsV0FBVyxhQUFjLFNBQVUsVUFBVyxTQUFTQyxFQUFRSyxHQUU1REwsRUFBT00sTUFBUSxTQUFTQyxFQUFVQyxHQUM5QkgsRUFBUUMsTUFBTUMsRUFBVUMsR0FDbkJDLEtBQUssU0FBU04sR0FDWEgsRUFBT1UsTUFBTSxRQUFTUCxFQUFLUSxZQU0zQ2QsUUFBUUMsT0FBTyxTQUNkQyxXQUFXLGFBQWMsU0FBVSxXQUFZLFVBQVcsU0FBU0MsRUFBUVksRUFBVVAsR0FFbEZPLEVBQVNDLFFBQVFDLFFBQVEsU0FBU0MsR0FDOUJmLEVBQU9lLE1BQVFBLElBR25CZixFQUFPZ0IsUUFBVSxXQUNiLEdBQUlDLEdBQVdqQixFQUFPaUIsUUFDbEJmLEdBQUVnQixLQUFLRCxHQUFVRSxPQUFTLEdBRTFCUCxFQUFTUSxRQUNMQyxNQUFPaEIsRUFBUWdCLE1BQ2ZDLEtBQU10QixFQUFPaUIsV0FFaEJILFFBQVEsU0FBU1MsR0FDZHZCLEVBQU9lLE1BQU1TLFFBQVFELEdBQ3JCdkIsRUFBT2lCLFNBQVcsU0FPbENwQixRQUFRQyxPQUFPLFNBQ2QyQixRQUFRLFlBQWEsUUFBUyxVQUFXLFNBQVNDLEVBQU9yQixHQUN0RHNCLEtBQUtkLE1BQVEsV0FDVCxNQUFPYSxHQUFNRSxJQUFJLGNBQ3RCQyxTQUFXQyxTQUFVekIsRUFBUWdCLFVBSS9CTSxLQUFLUCxPQUFTLFNBQVVHLEdBQ2pCLE1BQU9HLEdBQU1ILEtBQUssYUFBY0EsT0FLeEMxQixRQUFRQyxPQUFPLFNBQ2RpQyxRQUFBLGlCQUFPLFNBQVNDLEdBQ2hCQSxFQUNFQyxLQUFLLEtBQU1sQyxXQUFZLFlBQWFtQyxZQUFhLGVBQ2pERCxLQUFLLGFBQWNsQyxXQUFZLGVBQWdCbUMsWUFBYSxrQkFDNURELEtBQUssVUFBV2xDLFdBQVksWUFBYW1DLFlBQWEsa0JBRXpEckMsUUFBUUMsT0FBTyxTQUNkMkIsUUFBUSxXQUFBLFFBQVcsU0FBU0MsR0FDNUIsR0FBSVMsR0FBTVIsSUFDVlEsR0FBSUMsUUFBVSxXQUNiLE1BQU9WLEdBQU1FLElBQUksY0FDaEJDLFNBQVdDLFNBQVVILEtBQUtOLFVBSTVCYyxFQUFJN0IsTUFBUSxTQUFTQyxFQUFVQyxHQUM5QixNQUFPa0IsR0FBTUgsS0FBSyxpQkFDakJoQixTQUFVQSxFQUNWQyxTQUFVQSxJQUNSQyxLQUFLLFNBQVM0QixHQUVoQixNQURBRixHQUFJZCxNQUFRZ0IsRUFBSTFCLEtBQ1R3QixFQUFJQyIsImZpbGUiOiJhcHAuanMiLCJzb3VyY2VzQ29udGVudCI6WyJhbmd1bGFyLm1vZHVsZSgnbXlhcHAnLCBbXG5cdCduZ1JvdXRlJ1xuXSk7XG5cblxuYW5ndWxhci5tb2R1bGUoJ215YXBwJylcbi5jb250cm9sbGVyKCdBcHBsaWNhdGlvbkN0cmwnLCBmdW5jdGlvbigkc2NvcGUpIHtcblx0JHNjb3BlLiRvbignbG9naW4nLCBmdW5jdGlvbihfLCB1c2VyKSB7XG5cdFx0JHNjb3BlLmN1cnJlbnRVc2VyID0gdXNlcjtcblx0fSk7XG59KTtcblxuYW5ndWxhci5tb2R1bGUoJ215YXBwJylcbi5jb250cm9sbGVyKCdMb2dpbkN0cmwnLCBbJyRzY29wZScsICdVc2VyU3ZjJywgZnVuY3Rpb24oJHNjb3BlLCBVc2VyU3ZjKSB7XG4gICAgXG4gICAgJHNjb3BlLmxvZ2luID0gZnVuY3Rpb24odXNlcm5hbWUsIHBhc3N3b3JkKSB7XG4gICAgICAgIFVzZXJTdmMubG9naW4odXNlcm5hbWUsIHBhc3N3b3JkKVxuICAgICAgICAgICAgLnRoZW4oZnVuY3Rpb24odXNlcikge1xuICAgICAgICAgICAgICAgICRzY29wZS4kZW1pdCgnbG9naW4nLCB1c2VyLmRhdGEpO1xuICAgICAgICAgICAgfSk7XG4gICAgfVxufV0pO1xuXG5cbmFuZ3VsYXIubW9kdWxlKCdteWFwcCcpXG4uY29udHJvbGxlcignUG9zdHNDdHJsJywgWyckc2NvcGUnLCAnUG9zdHNTdmMnLCAnVXNlclN2YycsIGZ1bmN0aW9uKCRzY29wZSwgUG9zdHNTdmMsIFVzZXJTdmMpIHtcbiAgICBcbiAgICBQb3N0c1N2Yy5mZXRjaCgpLnN1Y2Nlc3MoZnVuY3Rpb24ocG9zdHMpIHtcbiAgICAgICAgJHNjb3BlLnBvc3RzID0gcG9zdHM7XG4gICAgfSk7XG5cbiAgICAkc2NvcGUuYWRkUG9zdCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIHBvc3RCb2R5ID0gJHNjb3BlLnBvc3RCb2R5O1xuICAgICAgICBpZiAoXy50cmltKHBvc3RCb2R5KS5sZW5ndGggPiAwKSB7XG5cbiAgICAgICAgICAgIFBvc3RzU3ZjLmNyZWF0ZSh7XG4gICAgICAgICAgICAgICAgdG9rZW46IFVzZXJTdmMudG9rZW4sXG4gICAgICAgICAgICAgICAgYm9keTogJHNjb3BlLnBvc3RCb2R5XG4gICAgICAgICAgICB9KVxuICAgICAgICAgICAgLnN1Y2Nlc3MoZnVuY3Rpb24ocG9zdCkge1xuICAgICAgICAgICAgICAgICRzY29wZS5wb3N0cy51bnNoaWZ0KHBvc3QpO1xuICAgICAgICAgICAgICAgICRzY29wZS5wb3N0Qm9keSA9ICcnO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICB9O1xufV0pO1xuXG5cbmFuZ3VsYXIubW9kdWxlKCdteWFwcCcpXG4uc2VydmljZSgnUG9zdHNTdmMnLCBbJyRodHRwJywgJ1VzZXJTdmMnLCBmdW5jdGlvbigkaHR0cCwgVXNlclN2Yykge1xuICAgIHRoaXMuZmV0Y2ggPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiAkaHR0cC5nZXQoJy9hcGkvcG9zdHMnLCB7XG5cdFx0XHRoZWFkZXJzOiB7ICdYLUF1dGgnOiBVc2VyU3ZjLnRva2VuIH1cbiAgICAgICAgfSk7XG4gICAgfVxuXG5cdHRoaXMuY3JlYXRlID0gZnVuY3Rpb24gKHBvc3QpIHtcbiAgICAgICAgcmV0dXJuICRodHRwLnBvc3QoJy9hcGkvcG9zdHMnLCBwb3N0KTtcbiAgICB9XG59XSk7XG5cblxuYW5ndWxhci5tb2R1bGUoJ215YXBwJylcbi5jb25maWcoZnVuY3Rpb24oJHJvdXRlUHJvdmlkZXIpIHtcblx0JHJvdXRlUHJvdmlkZXJcblx0XHQud2hlbignLycsIHtjb250cm9sbGVyOiAnUG9zdHNDdHJsJywgdGVtcGxhdGVVcmw6ICdwb3N0cy5odG1sJ30pXG5cdFx0LndoZW4oJy9yZWdpc3RlcicsIHtjb250cm9sbGVyOiAnUmVnaXN0ZXJDdHJsJywgdGVtcGxhdGVVcmw6ICdyZWdpc3Rlci5odG1sJ30pXG5cdFx0LndoZW4oJy9sb2dpbicsIHtjb250cm9sbGVyOiAnTG9naW5DdHJsJywgdGVtcGxhdGVVcmw6ICdsb2dpbi5odG1sJ30pO1xufSk7XG5hbmd1bGFyLm1vZHVsZSgnbXlhcHAnKVxuLnNlcnZpY2UoJ1VzZXJTdmMnLCBmdW5jdGlvbigkaHR0cCkge1xuXHR2YXIgc3ZjID0gdGhpcztcblx0c3ZjLmdldFVzZXIgPSBmdW5jdGlvbiAoKSB7XG5cdFx0cmV0dXJuICRodHRwLmdldCgnL2FwaS91c2VycycsIHtcblx0XHRcdGhlYWRlcnM6IHsgJ1gtQXV0aCc6IHRoaXMudG9rZW4gfVxuXHRcdH0pO1xuXHR9O1xuXG5cdHN2Yy5sb2dpbiA9IGZ1bmN0aW9uKHVzZXJuYW1lLCBwYXNzd29yZCkge1xuXHRcdHJldHVybiAkaHR0cC5wb3N0KCcvYXBpL3Nlc3Npb25zJywge1xuXHRcdFx0dXNlcm5hbWU6IHVzZXJuYW1lLCBcblx0XHRcdHBhc3N3b3JkOiBwYXNzd29yZFxuXHRcdH0pLnRoZW4oZnVuY3Rpb24odmFsKSB7XG5cdFx0XHRzdmMudG9rZW4gPSB2YWwuZGF0YTtcblx0XHRcdHJldHVybiBzdmMuZ2V0VXNlcigpO1xuXHRcdH0pO1xuXHR9O1xufSk7XG4iXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0=